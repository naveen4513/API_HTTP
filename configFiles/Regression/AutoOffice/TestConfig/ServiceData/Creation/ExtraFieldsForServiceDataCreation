#NOTE: KEYS HERE ARE CASE SENSITIVE. IT SHOULD EXACTLY MATCH THE JSONOBJECT NAME AS IN NEW API RESPONSE

#All section names must be in lower case characters only.
#Section represents Entity Name as in EntityId.cfg
#Key would be an Extra field.

#DelimiterForValues is to separate the Extra field and its Value.
delimiterforvalues = ->

dynamic filter id = 1000914
dynamic filter name = 106414

service data filter id = 248

#If Json Key is a JsonObject or JsonArray then specify its key as well.
#For ex. to specify an extra field like currency, use the format:  currency = values -> {"name": "Indian Rupee (INR)","id": 8,"shortName": "INR","parentName": "Indian Rupee (INR)"}
#If Json Key is not a JsonObject or JsonArray then no need to specify its key. The fieldName will be considered its key.
#For ex. to specify an extra field like goal, use the format: goal = {"values": "Infy_DefaultText522","name": "goal"}. Here goal would be considered as key.
#For fields like Stakeholders and Fields which have AutoComplete option, pass whole JsonObject

#If any field is of Date Type and requires date to be extracted at Runtime then Strictly use format: fieldName = Date -> DateFormat -> +/- NoOfDays.
#For ex. to calculate 2 days plus from currentDate: plannedCompletionDate = Date -> MM:dd:yyyy -> +2
#For ex. to calculate 2 days minus from currentDate: requestedOn = Date -> MM:dd:yyyy -> -2
#If any date field requires specific value then just pass it as for others and not in above format.

[common extra fields]

stakeHolders = {"name":"stakeHolders","values":{"rg_2210":{"values":[{"name":"Anay User","id":1044,"type":2,"email":"anay_user_dft@sirionqa.office","properties":{}}],"name":"rg_2308","label":"Contract Manager","userType":[2,1,3,4],"options":null}},"options":null}

dynamicMetadata = {"dyn106522":{"name":"dyn106522","id":106522,"multiEntitySupport":false,"values":"Text Field"},"dyn106535":{"name":"dyn106535","id":106535,"multiEntitySupport":false,"values":121},"dyn106540":{"name":"dyn106540","id":106540,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9072}},"dyn106545":{"name":"dyn106545","id":106545,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9079},{"name":"Option2","id":9080}]},"dyn106531":{"name":"dyn106531","id":106531,"multiEntitySupport":false,"values":"02-09-2020"},"dyn106526":{"name":"dyn106526","id":106526,"multiEntitySupport":false,"values":"Text Area"},"dyn106414":{"name":"dyn106414","id":106414,"multiEntitySupport":false,"values":unqString}}

#Automation Text Field
dyn106522 = {"name":"dyn106522","id":106522,"multiEntitySupport":false,"values":"Text Field"}

#Automation Currency
dyn106535 = {"name":"dyn106535","id":106535,"multiEntitySupport":false,"values":121}

#Automation Single SELECT
dyn106540 = {"name":"dyn106540","id":106540,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9072}}

#Automation MULTI SELECT
dyn106545 = {"name":"dyn106545","id":106545,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9079},{"name":"Option2","id":9080}]}

#Automation Date
dyn106531 = {"name":"dyn106531","id":106531,"multiEntitySupport":false,"values":"02-09-2020"}

#Automation TEXT AREA
dyn106526 = {"name":"dyn106526","id":106526,"multiEntitySupport":false,"values":"Text Area"}

#Automation Numeric
dyn106414 = {"name":"dyn106414","id":106414,"multiEntitySupport":false,"values":unqString}

[arc flow 2]
name = {"name": "name","id":4038,"values": "service data arc flow es listing"}
invoicingType = values -> {"name": "ARC/RRC","id": 3}
billingPeriod = values -> {"name": "Monthly","id": 1}
startDate = {"name":"startDate","id":8054,"values":"08-01-2020"}
serviceIdClient = {"name": "serviceIdClient","values": "new client"}
serviceIdSupplier = {"name": "serviceIdSupplier","values": "new supplier"}
endDate = {"name":"endDate","id":8055,"values":"08-31-2020"}
billingAvailable = {"name": "billingAvailable", "id": 11333, "values": true}
pricingAvailable = {"name": "pricingAvailable", "id": 11430, "values": true}
consumptionAvailable = {"name": "consumptionAvailable", "id": 11335, "values": true}
unitType = values -> {"name": "Desktop", "id": 1064}
pricings = {"values": [{"volume": 101.2,"endDate": "08-31-2020","unitRate": 20,"startDate": "08-01-2020"}],"name": "pricings","multiEntitySupport": false}
arcRrc = {"values": [{"lowerVolume": 101.2,"endDate": "08-31-2020","rate": 20,"upperVolume": 101.2,"type": {"id": 1},"startDate": "08-01-2020"}],"name": "arcRrc","multiEntitySupport": false}