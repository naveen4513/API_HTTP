#usage logic
# '&' ampersand divides each rule in multiple rule which is divided by semi colon
# '+' two numbers (left and right) of plus sign represents custom field name = entity type + field position (e.g. invoice text field basic information 1 = invoice + text field basic information 1)
# '-' hyphen divides parts of a single rule
# 11-C67+1+1-C67+1+2&11-C67+1+1-C67+1+2 splitting the seq around hyphen gives us
# rule 1 : 11,C67+1+1,C67+1+2 ; rule 2 : 11,C67+1+1,C67+1+2 (first number in a rule represents formula id and further represents custom field name)
# rule 1 : 11,C67+1+1,C67+1+2 -> 11 is the formula id map below, C represents custom field, 67+1 represents custom field name (invoice + text field basic information), and final +1 represents the number at the last of field name like '1' in 'invoice numeric basic information 1' or '2' in 'invoice numeric basic information 2'

#PricingSchedulerPollingTime: The time interval between requests to Check if Pricing Scheduler Job is finished (in milliseconds). Default Value is 5000;
pricingschedulerpollingtime = 5000

#PricingSchedulerWaitTimeOut: The timeout for the Pricing Scheduler (in milliseconds). This property is used only when WaitForPricingScheduler is set to True.
#Default Value is 1200000 milliseconds.
pricingschedulerwaittimeout = 600000

#Pricing Template Details
pricingtemplatefilepath = src/test/resources/TestConfig/Invoice

#FailTestIfJobNotCompletedWithinSchedulerTimeOut: Whether to fail test If Job not Completed within Scheduler Time Out or not.
#Possible Values are True or False. Default Value is True.
failtestifjobnotcompletedwithinschedulertimeout = false

#LineItemValidationTimeOut: The timeout for the Invoice Line Item Validation (in milliseconds).
#Default Value is 1200000 milliseconds
lineitemvalidationtimeout = 600000

#FailTestIfLineItemValidationNotCompletedWithinTimeOut: Whether to fail test if Invoice Line Item Validation not Completed within TimeOut or not.
#Possible Values are True or False. Default Value is True.
failtestiflineitemvalidationnotcompletedwithintimeout = false

#WaitForPricingScheduler: Whether to wait for Scheduler to Consume the Pricing Data or not. Possible Values are True or False. Default Value is True.
#If set to True then will wait for the Time specified in property 'PricingSchedulerWaitTimeOut'. Otherwise will dump data to file which can be verified later.
waitforpricingscheduler = true

invoicecustomemailtemplatename = Auto test email

[field name mapping]
customTextFieldNameInvoice = custom_text_field_invoice_automation_9
customTextAreaFieldNameInvoice = custom_textarea_field_invoice_automation_9
customNumericFieldNameInvoice = custom_numeric_field_invoice_automation_9
customDateFieldNameInvoice = custom_date_field_invoice_automation_9
customTextFieldNameServiceData = custom_text_field_servicedata_automation_9
customTextFieldNameLineItem = custom_text_field_lineitem_automation_9

[field type mapping]
1 = customTextFieldNameInvoice,invoice text field basic information 1
2 = customTextAreaFieldNameInvoice,invoice textarea field basic information 1
3 = customNumericFieldNameInvoice,invoice numeric field basic information 1
4 = customDateFieldNameInvoice,invoice date field basic information 1
5 = customTextFieldNameServiceData,service data text field basic information 1
6 = customTextFieldNameLineItem,line item text field basic information 1

[rule config]
1 = -
2 = entity-service data-
3 = parent-

[rule payload]
invoice = rule invoice abc news
line item = rule line item abc news
billing data = rule billing data abc news

[properties]
testallcases = false
scasestorun = 12
#0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25
fcasestorun =
#0,1,2,3,4
cases = 4-1-1-1,3-4-1-1,4-3-1-1,1-2-1-1,2-1-1-1,6-5-2-2,6-1-3-2
results = failure,failure,failure,failure,success,success,success
cases76646 = 6-5
results76646 = success
run = 1-C165+5+2-C67+5+3-C67+1+1,1-C165+5+2-C67+5+3-79,1-C67+5+3-C67+5+4-C67+1+1,1-C67+5+3-C67+5+4-52,1-C165+5+2-C64+5+3-C64+1+1,1-C165+5+2-C64+5+3-81,1-C165+5+2-C67+5+3-S67+1+1,12-C165+1+1-24&2-C165+5+2-C67+5+3-C165+1+1,2-C165+5+2-C67+5+3-C67+1+1,2-C165+5+2-C67+5+3-79,2-C67+5+3-C67+5+4-C67+1+1,2-C67+5+3-C67+5+4-52,2-C165+5+2-C64+5+3-C64+1+1,2-C165+5+2-C64+5+3-81,2-C165+5+2-C67+5+3-S67+1+1,12-C165+1+1-24&1-C165+5+2-C67+5+3-C165+1+1,3-C165+1+1-C67+5+3-C67+5+4,3-S165+1+1-C67+5+3-C67+5+4,3-C165+1+1-C67+5+3-C165+5+2,3-C165+1+1-C64+5+3-C64+5+4,3-C165+1+1-C64+5+3-C165+5+2,12-C165+1+2-0&7-C165+1+1-C67+1+1-C165+1+2,12-C165+1+2-4&7-C165+1+1-C64+1+1-C165+1+2,12-C165+1+2-4&7-C165+1+1-S67+1+1-C165+1+2,6-C165+1+1-C64+1+1-C165+1+2,15-C165+1+1-C67+1+1-C165+1+2-S67+1+1,11-C165+1+1-C64+1+1,11-C165+1+1-S67+1+1,11-C165+5+2-C64+5+3,11-C165+2+1-S64+2+1,11-C67+1+1-C67+1+2&11-C67+1+1-C67+1+2,11-C165+5+1-C67+6+1,12-C165+2+1-hello,12-C165+1+1-907,10-C165+1+1-S67+1+1-C67+1+1-S165+1+1-S165+1+2,8-C165+1+1-S67+1+1-C67+1+1-S165+1+2-S165+1+3
result = success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success,success

[success cases]
11-C67+2+1-S67+1+1
11-C165+1+1-S67+1+1
11-C165+5+2-C64+5+3
11-C165+8+2-C64+2+3

#C7847 C7861
4-C165+1+1-C64+1+1-C165+1+2;2-y-C165+2+2>test
4-C165+1+1-C64+1+1-54
5-C165+1+1-C64+1+1-C165+1+2
5-C165+1+1-C67+1+1-54;2-y-C165+2+2>test
6-C165+1+1-C67+1+1-C165+1+2;2-y-C165+2+2>test
6-C165+1+1-C64+1+1-54
7-C165+1+1-C67+1+1-C165+1+2
7-C165+1+1-C64+1+1-54
8-C165+1+1-C64+1+1-C165+1+2
8-C165+1+1-C67+1+1-54
9-C165+1+1-C64+1+1-C165+1+2;2-y-C165+2+2>test
9-C165+1+1-C67+1+1-54
10-C165+1+1-C64+1+1-C165+1+2
10-C165+1+1-C64+1+1-54;2-y-C165+2+2>test

#C7847 C7860
2-C165+5+2-S67+5+1-S67+1+1
2-C165+5+2-C67+5+3-S67+1+1;2-y-C165+2+2>test
2-C165+5+2-C67+5+3-63;2-y-C165+2+2>test
1-C165+5+2-C67+5+3-S67+1+1
3-C165+1+1-C67+5+3-C67+5+4;2-y-C165+2+2>test

#C10836
11-C67+1+1-S67+1+2

#C4166 #C3343
12-C165+1+1-24&2-C165+5+2-C67+5+3-C165+1+1




1-C165+5+2-C67+5+3-C67+1+1
1-C165+5+2-C67+5+3-79
1-C67+5+3-C67+5+4-C67+1+1
1-C67+5+3-C67+5+4-52
1-C165+5+2-C64+5+3-C64+1+1
1-C165+5+2-C64+5+3-81
1-C165+5+2-C67+5+3-S67+1+1
2-C165+5+2-C67+5+3-C67+1+1
2-C165+5+2-C67+5+3-79
2-C67+5+3-C67+5+4-C67+1+1
2-C67+5+3-C67+5+4-52
2-C165+5+2-C64+5+3-C64+1+1
2-C165+5+2-C64+5+3-81
12-C165+1+1-24&1-C165+5+2-C67+5+3-C165+1+1
3-C165+1+1-C67+5+3-C67+5+4
3-S165+1+1-C67+5+3-C67+5+4
3-C165+1+1-C67+5+3-C165+5+2
3-C165+1+1-C64+5+3-C64+5+4
3-C165+1+1-C64+5+3-C165+5+2
12-C165+1+2-0&7-C165+1+1-C67+1+1-C165+1+2
12-C165+1+2-4&7-C165+1+1-C64+1+1-C165+1+2
12-C165+1+2-4&7-C165+1+1-S67+1+1-C165+1+2
15-C165+1+1-C67+1+1-C165+1+2-S67+1+1
11-C165+1+1-C64+1+1
11-C165+1+1-S67+1+1
11-C165+5+2-C64+5+3
11-C165+2+1-S64+2+1
11-C67+1+1-C67+1+2&11-C67+1+1-C67+1+2
11-C165+5+1-C67+6+1
12-C165+2+1-testdata
12-C165+1+1-907
10-C165+1+1-S67+1+1-C67+1+1-S165+1+1-S165+1+2
8-C165+1+1-S67+1+1-C67+1+1-S165+1+2-S165+1+3

[fail cases]
11-C165+5+2-C64+2+3
11-C165+5+2-C64+1+3
11-C165+1+2-C64+5+3
11-C165+2+2-C64+8+3

#C10836
12-S67+1+2-67

10-C165+1+1-907
1=2-C165+1+1-S67+1+1-C67+1+1-S165+1+1-S165+1+2
2=2-C165+1+1-S67+1+1-C67+1+1-S165+1+2-S165+1+3

# 4,6,8,9,10 can have any number of parameters and other formulas can have only 2 parameters on RHS
# Fails formula = 14,16
[formula]
1 = ${%%##&&}~addMonths(${%%##&&},${%%##&&})
2 = ${%%##&&}~addDays(${%%##&&},${%%##&&})
3 = ${%%##&&}~daysDifference(${%%##&&},${%%##&&})
4 = ${%%##&&}~add(${%%##&&},${%%##&&})
5 = ${%%##&&}~subtract(${%%##&&},${%%##&&})
6 = ${%%##&&}~multiply(${%%##&&},${%%##&&})
7 = ${%%##&&}~divide(${%%##&&},${%%##&&})
8 = ${%%##&&}~min(${%%##&&},${%%##&&})
9 = ${%%##&&}~max(${%%##&&},${%%##&&})
10 = ${%%##&&}~avg(${%%##&&},${%%##&&})
11 = ${%%##&&}@{%%##&&}
12 = ${%%##&&}#{%%##&&}
13 = ${%%##&&}~add(${%%##&&},${%%##&&})
14 = ${%%##&&}~subtract(${%%##&&},${%%##&&},${%%##&&})
15 = ${%%##&&}~multiply(${%%##&&},${%%##&&},${%%##&&})
16 = ${%%##&&}~divide(${%%##&&},${%%##&&},${%%##&&})

[conditions]
1=${line item numeric field basic information 2}~45
2=${line item text field basic information 2}~'test'

[entity type]
67 = invoice
165 = line item
64 = service data

[custom field type]
1 = numeric field basic information
2 = text field basic information
3 = single select field basic information
4 = multi select field basic information
5 = date field basic information
6 = date with timezone field basic information
7 = boolean field basic information
8 = textarea field basic information

#Number(1), Text(2), SingleSelect(3), MultiSelect(4), Date(5), DateWithTimeZone(6), Boolean(7);
[static field]
67+1 = Payment Term,Invoice Amount
67+2 =
67+3 =
67+4 =
67+5 = Invoice Date
67+6 = Invoice Period Start,Invoice Period End Date
165+1 = System Total,System Amount,Discrepancy Total,System Tax,Amount
165+2 =
165+3 =
165+4 =
165+5 =
165+6 =
64+1 =
64+2 = Description,Service ID (Client),Service ID (Supplier)
64+3 =
64+4 =
64+5 = Start Date,End Date
64+6 =

//mapped according to DB table
[field type]
1 = number
2 = text
3 = singleselect
4 = multiselect
5 = date
6 = datewithtimezone
7 = boolean
8 = text

[fixed fee flow for create rule]
contractsectionname = fixed fee flow 1
servicedatasectionname =fixed fee flow 1
invoicesectionname = fixed fee flow for create rule
invoicelineitemsectionname = fixed fee flow 1

uploadpricing = true
arcsheetname = ARCRRC

pricingstemplatefilename = FixedFeeFlow1Pricing.xlsm
pricingstemplatesheetname = Pricing
numberofrowstoedit = 1
startingrownum = 6
volumecolumnnum = 7
ratecolumnnum = 8
volumecolumnvalues = 10
ratecolumnvalues = 10

lineitemexpectedresult = No Discrepancy


[static field label name map]
System Total = systemTotal
System Amount = systemAmount
Discrepancy Total = discrepancyTotal
System Tax = systemTax
Amount = amount
Payment Term = paymentTerm
Invoice Amount = invoiceAmount
Invoice Period Start = invoicePeriodFromDate
Invoice Period End Date = invoicePeriodToDate
Service ID (Client) = serviceIdClient
Service ID (Supplier) = serviceIdSupplier
Description = description
Start Date = startDate
End Date = endDate
Invoice Date = invoiceDate

[c7661]
rules=${invoice text field basic information 1}@{Payment Term}&${Payment Term}#{'12'}
#=12-S67+1+1-11
#11-C67+1+1-S67+1+1
#combinedrule=12-S67+1+1-11&11-C67+1+1-S67+1+1
finalvalue=12