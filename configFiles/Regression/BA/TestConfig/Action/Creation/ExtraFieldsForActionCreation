#NOTE: KEYS HERE ARE CASE SENSITIVE. IT SHOULD EXACTLY MATCH THE JSONOBJECT NAME AS IN NEW API RESPONSE

#All section names must be in lower case characters only.
#Section represents Entity Name as in EntityId.cfg
#Key would be an Extra field.

#DelimiterForValues is to separate the Extra field and its Value.
delimiterforvalues = ->
dynamic filter id = 1001059
dynamic filter name = 106547

#If Json Key is a JsonObject or JsonArray then specify its key as well.
#For ex. to specify an extra field like currency, use the format:  currency = values -> {"name": "Indian Rupee (INR)","id": 8,"shortName": "INR","parentName": "Indian Rupee (INR)"}
#If Json Key is not a JsonObject or JsonArray then no need to specify its key. The fieldName will be considered its key.
#For ex. to specify an extra field like goal, use the format: goal = {"values": "Infy_DefaultText522","name": "goal"}. Here goal would be considered as key.
#For fields like Stakeholders and Fields which have AutoComplete option, pass whole JsonObject

#If any field is of Date Type and requires date to be extracted at Runtime then Strictly use format: fieldName = Date -> DateFormat -> +/- NoOfDays.
#For ex. to calculate 2 days plus from currentDate: plannedCompletionDate = Date -> MM:dd:yyyy -> +2
#For ex. to calculate 2 days minus from currentDate: requestedOn = Date -> MM:dd:yyyy -> -2
#If any date field requires specific value then just pass it as for others and not in above format.

[common extra fields]
requestedOn = Date -> MM-dd-yyyy hh:mm:ss-> -3
plannedCompletionDate = Date -> MM-dd-yyyy hh:mm:ss -> +10

dynamicMetadata = {"dyn106572":{"name":"dyn106572","id":106572,"multiEntitySupport":false,"values":"Text Field"},"dyn106638":{"name":"dyn106638","id":106638,"multiEntitySupport":false,"values":121},"dyn106657":{"name":"dyn106657","id":106657,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9088}},"dyn106674":{"name":"dyn106674","id":106674,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9122},{"name":"Option2","id":9123}]},"dyn106610":{"name":"dyn106610","id":106610,"multiEntitySupport":false,"values":"09-03-2020"},"dyn106591":{"name":"dyn106591","id":106591,"multiEntitySupport":false,"values":"Text Area"},"dyn106547":{"name":"dyn106547","id":106547,"multiEntitySupport":false,"values":unqString}}

#Automation Text Field
dyn106572 = {"name":"dyn106572","id":106572,"multiEntitySupport":false,"values":"Text Field"}

#Automation Currency
dyn106638 = {"name":"dyn106638","id":106638,"multiEntitySupport":false,"values":121}

#Automation Single SELECT
dyn106657 = {"name":"dyn106657","id":106657,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9088}}

#Automation MULTI SELECT
dyn106674 = {"name":"dyn106674","id":106674,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9122},{"name":"Option2","id":9123}]}

#Automation Date
dyn106610 = {"name":"dyn106610","id":106610,"multiEntitySupport":false,"values":"09-03-2020"}

#Automation TEXT AREA
dyn106591 = {"name":"dyn106591","id":106591,"multiEntitySupport":false,"values":"Text Area"}

#Automation Numeric
dyn106547 = {"name":"dyn106547","id":106547,"multiEntitySupport":false,"values":unqString}


[csv injection scenario]
name = {"name":"name","id":404,"values":"splCharnam"}
description = {"name":"name","id":404,"values":"splChardesc"}