#NOTE: KEYS HERE ARE CASE SENSITIVE. IT SHOULD EXACTLY MATCH THE JSONOBJECT NAME AS IN NEW API RESPONSE

#All section names must be in lower case characters only.
#Section represents Entity Name as in EntityId.cfg
#Key would be an Extra field.

#DelimiterForValues is to separate the Extra field and its Value.
delimiterforvalues = ->
dynamic filter name = 106568
dynamic filter id = 1001142

#If Json Key is a JsonObject or JsonArray then specify its key as well.
#For ex. to specify an extra field like currency, use the format:  currency = values -> {"name": "Indian Rupee (INR)","id": 8,"shortName": "INR","parentName": "Indian Rupee (INR)"}
#If Json Key is not a JsonObject or JsonArray then no need to specify its key. The fieldName will be considered its key.
#For ex. to specify an extra field like goal, use the format: goal = {"values": "Infy_DefaultText522","name": "goal"}. Here goal would be considered as key.
#For fields like Stakeholders and Fields which have AutoComplete option, pass whole JsonObject

#If any field is of Date Type and requires date to be extracted at Runtime then Strictly use format: fieldName = Date -> DateFormat -> +/- NoOfDays.
#For ex. to calculate 2 days plus from currentDate: plannedCompletionDate = Date -> MM:dd:yyyy -> +2
#For ex. to calculate 2 days minus from currentDate: requestedOn = Date -> MM:dd:yyyy -> -2
#If any date field requires specific value then just pass it as for others and not in above format.

[common extra fields]
oldSystemId = {"name":"oldSystemId","id":11308,"values":"Third Party ID"}

dynamicMetadata = {"dyn106587":{"name":"dyn106587","id":106587,"multiEntitySupport":false,"values":"Text Field"},"dyn106670":{"name":"dyn106670","id":106670,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9114}},"dyn106688":{"name":"dyn106688","id":106688,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9150},{"name":"Option2","id":9151}]},"dyn106625":{"name":"dyn106625","id":106625,"multiEntitySupport":false,"values":"09-03-2020"},"dyn106606":{"name":"dyn106606","id":106606,"multiEntitySupport":false,"values":"Text Area"},"dyn106568":{"name":"dyn106568","id":106568,"multiEntitySupport":false,"values":unqString}}

#Automation Text Field
dyn106587 = {"name":"dyn106587","id":106587,"multiEntitySupport":false,"values":"Text Field"}

#Automation Currency
#dyn106407 = {"name":"dyn106407","id":106407,"multiEntitySupport":false,"values":121}

#Automation Single SELECT
dyn106670 = {"name":"dyn106670","id":106670,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9114}}

#Automation MULTI SELECT
dyn106688 = {"name":"dyn106688","id":106688,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9150},{"name":"Option2","id":9151}]}

#Automation Date
dyn106625 = {"name":"dyn106625","id":106625,"multiEntitySupport":false,"values":"09-03-2020"}

#Automation TEXT AREA
dyn106606 = {"name":"dyn106606","id":106606,"multiEntitySupport":false,"values":"Text Area"}

#Automation Numeric
dyn106568 = {"name":"dyn106568","id":106568,"multiEntitySupport":false,"values":unqString}

[csv injection scenario]
name = {"name":"name","id":503,"values":"splCharGauravSupplier"}
alias = {"name":"alias","id":504,"values":"splCharAlia"}
address = {"name":"address","id":506,"values":"splCharAddress"}
email = {"name":"email","id":81,"values":"splChartest@gmail.com"}
functions = {"name":"functions","multiEntitySupport":false,"id":508,"options":null,"values":[{"name":"Human Resources","id":1009}]}
services = {"name":"services","multiEntitySupport":false,"id":509,"options":null,"values":[{"name":"End-User Computing","id":1032,"parentId":1009,"parentName":"Human Resources"}]}
globalRegions = {"name":"globalRegions","multiEntitySupport":false,"id":510,"options":null,"values":[{"name":"APAC","id":1017,"additionalOption":false}]}
globalCountries = {"name":"globalCountries","multiEntitySupport":false,"id":511,"options":null,"values":[{"name":"Australia","id":15,"parentId":1017}]}