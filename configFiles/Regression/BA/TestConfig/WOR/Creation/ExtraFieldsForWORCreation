#NOTE: KEYS HERE ARE CASE SENSITIVE. IT SHOULD EXACTLY MATCH THE JSONOBJECT NAME AS IN NEW API RESPONSE

#All section names must be in lower case characters only.
#Section represents Entity Name as in EntityId.cfg
#Key would be an Extra field.

#DelimiterForValues is to separate the Extra field and its Value.
delimiterforvalues = ->
dynamic filter id = 1001158
dynamic filter name = 106571

#If Json Key is a JsonObject or JsonArray then specify its key as well.
#For ex. to specify an extra field like currency, use the format:  currency = values -> {"name": "Indian Rupee (INR)","id": 8,"shortName": "INR","parentName": "Indian Rupee (INR)"}
#If Json Key is not a JsonObject or JsonArray then no need to specify its key. The fieldName will be considered its key.
#For ex. to specify an extra field like goal, use the format: goal = {"values": "Infy_DefaultText522","name": "goal"}. Here goal would be considered as key.
#For fields like Stakeholders and Fields which have AutoComplete option, pass whole JsonObject

#If any field is of Date Type and requires date to be extracted at Runtime then Strictly use format: fieldName = Date -> DateFormat -> +/- NoOfDays.
#For ex. to calculate 2 days plus from currentDate: plannedCompletionDate = Date -> MM:dd:yyyy -> +2
#For ex. to calculate 2 days minus from currentDate: requestedOn = Date -> MM:dd:yyyy -> -2
#If any date field requires specific value then just pass it as for others and not in above format.

[common extra fields]
effectiveDate = {"name":"effectiveDate","id":913,"values":"07-20-2027","displayValues":"Jul-20-2027"}
expirationDate = {"name":"expirationDate","id":914,"values":"07-20-2027","displayValues":"Jul-20-2027"}
#timeZone = {"name":"timeZone","id":804,"values":{"name":"Asia/Kolkata (GMT +05:30)","id":8,"timeZone":"Asia/Kolkata"}}

dynamicMetadata = {"dyn106590":{"name":"dyn106590","id":106590,"multiEntitySupport":false,"values":"Text Field"},"dyn106656":{"name":"dyn106656","id":106656,"multiEntitySupport":false,"values":121},"dyn106673":{"name":"dyn106673","id":106673,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9120}},"dyn106691":{"name":"dyn106691","id":106691,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9156},{"name":"Option2","id":9157}]},"dyn106628":{"name":"dyn106628","id":106628,"multiEntitySupport":false,"values":"09-03-2020"},"dyn106609":{"name":"dyn106609","id":106609,"multiEntitySupport":false,"values":"Text Area"},"dyn106571":{"name":"dyn106571","id":106571,"multiEntitySupport":false,"values":unqString}}

#Automation Text Field
dyn106590 = {"name":"dyn106590","id":106590,"multiEntitySupport":false,"values":"Text Field"}

#Automation Currency
dyn106656 = {"name":"dyn106656","id":106656,"multiEntitySupport":false,"values":121}

#Automation Single SELECT
dyn106673 = {"name":"dyn106673","id":106673,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9120}}

#Automation MULTI SELECT
dyn106691 = {"name":"dyn106691","id":106691,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9156},{"name":"Option2","id":9157}]}

#Automation Date
dyn106628 = {"name":"dyn106628","id":106628,"multiEntitySupport":false,"values":"09-03-2020"}

#Automation TEXT AREA
dyn106609 = {"name":"dyn106609","id":106609,"multiEntitySupport":false,"values":"Text Area"}

#Automation Numeric
dyn106571 = {"name":"dyn106571","id":106571,"multiEntitySupport":false,"values":unqString}

[csv injection scenario]
briefDescription = {"name":"briefDescription","id":904, "values":"splCharDesc"}
effectiveDate = {"name":"effectiveDate","id":913,"values":"07-20-2027","displayValues":"Jul-20-2027"}
expirationDate = {"name":"expirationDate","id":914,"values":"07-20-2027","displayValues":"Jul-20-2027"}