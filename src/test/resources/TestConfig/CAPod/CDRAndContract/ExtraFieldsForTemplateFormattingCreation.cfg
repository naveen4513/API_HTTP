#NOTE: KEYS HERE ARE CASE SENSITIVE. IT SHOULD EXACTLY MATCH THE JSONOBJECT NAME AS IN NEW API RESPONSE

#All section names must be in lower case characters only.
#Section represents Entity Name as in EntityId.cfg
#Key would be an Extra field.

#DelimiterForValues is to separate the Extra field and its Value.
delimiterforvalues = ->
dynamic filter id = 1001144
dynamic filter name = 106569

#If Json Key is a JsonObject or JsonArray then specify its key as well.
#For ex. to specify an extra field like currency, use the format:  currency = values -> {"name": "Indian Rupee (INR)","id": 8,"shortName": "INR","parentName": "Indian Rupee (INR)"}
#If Json Key is not a JsonObject or JsonArray then no need to specify its key. The fieldName will be considered its key.
#For ex. to specify an extra field like goal, use the format: goal = {"values": "Infy_DefaultText522","name": "goal"}. Here goal would be considered as key.
#For fields like Stakeholders and Fields which have AutoComplete option, pass whole JsonObject

#If any field is of Date Type and requires date to be extracted at Runtime then Strictly use format: fieldName = Date -> DateFormat -> +/- NoOfDays.
#For ex. to calculate 2 days plus from currentDate: plannedCompletionDate = Date -> MM:dd:yyyy -> +2
#For ex. to calculate 2 days minus from currentDate: requestedOn = Date -> MM:dd:yyyy -> -2
#If any date field requires specific value then just pass it as for others and not in above format.

[common extra fields]
dynamicMetadata = {"dyn106588":{"name":"dyn106588","id":106588,"multiEntitySupport":false,"values":"Text Field"},"dyn106654":{"name":"dyn106654","id":106654,"multiEntitySupport":false,"values":121},"dyn106671":{"name":"dyn106671","id":106671,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9116}},"dyn106689":{"name":"dyn106689","id":106689,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9152},{"name":"Option2","id":9153}]},"dyn106626":{"name":"dyn106626","id":106626,"multiEntitySupport":false,"values":"09-03-2020"},"dyn106607":{"name":"dyn106607","id":106607,"multiEntitySupport":false,"values":"Text Area"},"dyn106569":{"name":"dyn106569","id":106569,"multiEntitySupport":false,"values":unqString}}

#Automation Text Field
dyn106588 = {"name":"dyn106588","id":106588,"multiEntitySupport":false,"values":"Text Field"}

#Automation Currency
dyn106654 = {"name":"dyn106654","id":106654,"multiEntitySupport":false,"values":121}

#Automation Single SELECT
dyn106671 = {"name":"dyn106671","id":106671,"options":null,"multiEntitySupport":false,"values":{"name":"Option1","id":9116}}

#Automation MULTI SELECT
dyn106689 = {"name":"dyn106689","id":106689,"options":null,"multiEntitySupport":false,"values":[{"name":"Option1","id":9152},{"name":"Option2","id":9153}]}

#Automation Date
dyn106626 = {"name":"dyn106626","id":106626,"multiEntitySupport":false,"values":"09-03-2020"}

#Automation TEXT AREA
dyn106607 = {"name":"dyn106607","id":106607,"multiEntitySupport":false,"values":"Text Area"}

#Automation Numeric
dyn106569 = {"name":"dyn106569","id":106569,"multiEntitySupport":false,"values":unqString}

[template to format]
name = {"name":"name","id":7404,"multiEntitySupport":false,"values":"AUTOMATION PURPOSE WITH C&D (PLEASE DO NOT USE)"}
category = {"name":"category","id":7426,"options":null,"multiEntitySupport":false}
coverPage = {"name":"coverPage","id":12197,"values":true,"multiEntitySupport":false}
coverPageText = {"name":"coverPageText","id":12198,"values":{"text":"DUMMY COVER PAGE TEMPLATE TEXT","htmlText":"DUMMY COVER PAGE TEMPLATE TEXT"},"multiEntitySupport":false}
clauses = {"name":"clauses","id":7419,"multiEntitySupport":false,"values":[{"clauseCategory":{"name":"Acceptance","id":"1188"},"clause":{"name":"AUTOMATION PURPOSE WITH COVER(PLEASE DO NOT USE)","id":11448},"clauseGroup":{"name":"Clause","id":1},"order":1,"mandatory":null},{"clauseCategory":{"name":"Acceptance","id":"1215"},"clause":{"name":"AUTOMATION PURPOSE DEFINITION (PLEASE DO NOT USE)","id":11449},"clauseGroup":{"name":"Clause","id":2},"order":2,"mandatory":null}]}
agreementType = {"name":"agreementType","id":7412,"options":null,"multiEntitySupport":false,"values":{"name":"Non Competition Agreement","id":1004}}
templateStyleId = {"values": "1018","name": "templateStyleId"}

[template used for formatting]
name = {"name":"name","id":7404,"multiEntitySupport":false,"values":"TemplateWithFormatting"}
category = {"name":"category","id":7426,"options":null,"multiEntitySupport":false}
coverPage = {"name":"coverPage","id":12197,"values":true,"multiEntitySupport":false}
coverPageText = {"name":"coverPageText","id":12198,"values":{"text":"dummy cover page template text addition in lower case","htmlText":"dummy cover page template text addition in lower case"},"multiEntitySupport":false}
clauses = {"name":"clauses","id":7419,"multiEntitySupport":false,"values":[{"clauseCategory":{"name":"Acceptance","id":"1188"},"clause":{"name":"AUTOMATION PURPOSE WITH COVER(PLEASE DO NOT USE)","id":11448},"clauseGroup":{"name":"Clause","id":1},"order":1,"mandatory":null},{"clauseCategory":{"name":"Acceptance","id":"1215"},"clause":{"name":"AUTOMATION PURPOSE DEFINITION (PLEASE DO NOT USE)","id":11449},"clauseGroup":{"name":"Clause","id":2},"order":2,"mandatory":null}]}
agreementType = {"name":"agreementType","id":7412,"options":null,"multiEntitySupport":false,"values":{"name":"Non Competition Agreement","id":1004}}
templateStyleId = {"values": "1018","name": "templateStyleId"}

[template doc viewer]
name = {"name":"name","id":7404,"multiEntitySupport":false,"values":"TemplateDocViewerVerification"}
category = {"name":"category","id":7426,"options":null,"multiEntitySupport":false}
coverPage = {"name":"coverPage","id":12197,"values":true,"multiEntitySupport":false}
coverPageText = {"name":"coverPageText","id":12198,"values":{"text":"COVER PAGE TESTING DATA","htmlText":"COVER PAGE TESTING DATA"},"multiEntitySupport":false}
clauses = {"name":"clauses","id":7419,"multiEntitySupport":false,"values":[{"clauseCategory":{"name":"Acceptance","id":"1188"},"clause":{"name":"AUTOMATION PURPOSE FOR TEMPLATE DOC VIEWER (PLEASE DO NOT USE)","id":11493},"clauseGroup":{"name":"Clause","id":1},"order":1,"mandatory":null}]}
agreementType = {"name":"agreementType","id":7412,"options":null,"multiEntitySupport":false,"values":{"name":"Non Competition Agreement","id":1004}}
templateStyleId = {"values": "1018","name": "templateStyleId"}

[template with image in doc viewer]
name = {"name":"name","id":7404,"multiEntitySupport":false,"values":"TEMPLATE WITH AN IMAGE CONTENT AS CLAUSE"}
category = {"name":"category","id":7426,"options":null,"multiEntitySupport":false}
coverPage = {"name":"coverPage","id":12197,"values":true,"multiEntitySupport":false}
coverPageText = {"name":"coverPageText","id":12198,"values":{"text":"COVER PAGE TESTING DATA","htmlText":"COVER PAGE TESTING DATA"},"multiEntitySupport":false}
clauses = {"name":"clauses","id":7419,"multiEntitySupport":false,"values":[{"clauseCategory":{"name":"Alternative Dispute Resolution","id":"1232"},"clause":{"name":"CLAUSE WITH AN IMAGE (PLEASE DO NOT USE)","id":11494},"clauseGroup":{"name":"Clause","id":1},"order":1,"mandatory":null}]}
agreementType = {"name":"agreementType","id":7412,"options":null,"multiEntitySupport":false,"values":{"name":"Non Competition Agreement","id":1004}}
templateStyleId = {"values": "1018","name": "templateStyleId"}